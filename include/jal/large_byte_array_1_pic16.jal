-- Title: Large Array library
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009..2019, all rights reserved.
-- Adapted-by: Rob Jansen
-- Compiler: >=2.5r2
-- Revision: $Revision$
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: This is library for creating a byte array that take up more than
--              256 bytes memory. Works for PICs with core PIC16.   
--
-- Sources:
--
-- Notes:
-- Supports byte array up to 2048 entries 
-- Creates an array named large_array_1
-- Use "alias new_array_name is large_array_1" to rename the array
-- See large_array_1.jal on how this lib was created.
--
-- Important: There is no range check on the index in the array.
--
-- Example:
-- const dword LARGE_ARRAY_1_SIZE = 500        -- choose number of array variables
-- const dword LARGE_ARRAY_1_VARIABLE_SIZE = 1 -- choose size of variables (byte)
-- include large_array_1                       -- include the array library
-- alias test is large_array_1                 -- rename/alias the array to test
--

--------------------------------------------------------------------------------
-- byte array
--------------------------------------------------------------------------------
var byte _large_array_1_byte_1h[256]
var byte _large_array_1_byte_2h[256]
var byte _large_array_1_byte_3h[256]
var byte _large_array_1_byte_4h[256]
var byte _large_array_1_byte_5h[256]
var byte _large_array_1_byte_6h[256]
var byte _large_array_1_byte_7h[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 7)) then  -- don't make an array with 0 entries
   var byte _large_array_1_byte_8h[LARGE_ARRAY_1_SIZE - (256 * 7)]
end if

var byte _large_array_1_byte_1g[256]
var byte _large_array_1_byte_2g[256]
var byte _large_array_1_byte_3g[256]
var byte _large_array_1_byte_4g[256]
var byte _large_array_1_byte_5g[256]
var byte _large_array_1_byte_6g[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 6)) then
   var byte _large_array_1_byte_7g[LARGE_ARRAY_1_SIZE - (256 * 6)]
end if

var byte _large_array_1_byte_1f[256]
var byte _large_array_1_byte_2f[256]
var byte _large_array_1_byte_3f[256]
var byte _large_array_1_byte_4f[256]
var byte _large_array_1_byte_5f[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 5)) then
   var byte _large_array_1_byte_6f[LARGE_ARRAY_1_SIZE - (256 * 5)]
end if

var byte _large_array_1_byte_1e[256]
var byte _large_array_1_byte_2e[256]
var byte _large_array_1_byte_3e[256]
var byte _large_array_1_byte_4e[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 4)) then
   var byte _large_array_1_byte_5e[LARGE_ARRAY_1_SIZE - (256 * 4)]
end if

var byte _large_array_1_byte_1d[256]
var byte _large_array_1_byte_2d[256]
var byte _large_array_1_byte_3d[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 3)) then
   var byte _large_array_1_byte_4d[LARGE_ARRAY_1_SIZE - (256 * 3)]
end if

var byte _large_array_1_byte_1c[256]
var byte _large_array_1_byte_2c[256]
if !(LARGE_ARRAY_1_SIZE == (256 * 2)) then
   var byte _large_array_1_byte_3c[LARGE_ARRAY_1_SIZE - (256 * 2)]
end if

var byte _large_array_1_byte_1b[256]
if !(LARGE_ARRAY_1_SIZE == 256) then
   var byte _large_array_1_byte_2b[LARGE_ARRAY_1_SIZE - (256)]
end if

if !(LARGE_ARRAY_1_SIZE == 0) then
   var byte _large_array_1_byte_1a[LARGE_ARRAY_1_SIZE]
end if

-- get a value from a large byte array
function large_array_1'get(word in address) return byte is
   var byte data
   
   if LARGE_ARRAY_1_SIZE > 1792 then
      if address >= 1792 then
         data = _large_array_1_byte_8h[address - 1792]
      elsif address >= 1536 then
         data = _large_array_1_byte_7h[address - 1536]
      elsif address >= 1280 then
         data = _large_array_1_byte_6h[address - 1280]
      elsif address >= 1024 then
         data = _large_array_1_byte_5h[address - 1024]
      elsif address >= 768 then
         data = _large_array_1_byte_4h[address - 768]
      elsif address >= 512 then
         data = _large_array_1_byte_3h[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2h[address - 256]
      else
         data = _large_array_1_byte_1h[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 1536 then
      if address >= 1536 then
         data = _large_array_1_byte_7g[address - 1536]
      elsif address >= 1280 then
         data = _large_array_1_byte_6g[address - 1280]
      elsif address >= 1024 then
         data = _large_array_1_byte_5g[address - 1024]
      elsif address >= 768 then
         data = _large_array_1_byte_4g[address - 768]
      elsif address >= 512 then
         data = _large_array_1_byte_3g[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2g[address - 256]
      else
         data = _large_array_1_byte_1g[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 1280 then
      if address >= 1280 then
         data = _large_array_1_byte_6f[address - 1280]
      elsif address >= 1024 then
         data = _large_array_1_byte_5f[address - 1024]
      elsif address >= 768 then
         data = _large_array_1_byte_4f[address - 768]
      elsif address >= 512 then
         data = _large_array_1_byte_3f[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2f[address - 256]
      else
         data = _large_array_1_byte_1f[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 1024 then
      if address >= 1024 then
         data = _large_array_1_byte_5e[address - 1024]
      elsif address >= 768 then
         data = _large_array_1_byte_4e[address - 768]
      elsif address >= 512 then
         data = _large_array_1_byte_3e[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2e[address - 256]
      else
         data = _large_array_1_byte_1e[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 768 then
      if address >= 768 then
         data = _large_array_1_byte_4d[address - 768]
      elsif address >= 512 then
         data = _large_array_1_byte_3d[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2d[address - 256]
      else
         data = _large_array_1_byte_1d[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 512 then
      if address >= 512 then
         data = _large_array_1_byte_3c[address - 512]
      elsif address >= 256 then
         data = _large_array_1_byte_2c[address - 256]
      else
         data = _large_array_1_byte_1c[address - 0]
      end if
   elsif LARGE_ARRAY_1_SIZE > 256 then
      if address >= 256 then
         data = _large_array_1_byte_2b[address - 256]
      else
         data = _large_array_1_byte_1b[address - 0]
      end if 
   elsif LARGE_ARRAY_1_SIZE > 0 then
      data = _large_array_1_byte_1a[address - 0]
   end if
   
   return data
end function

-- store a value into a large byte array
procedure large_array_1'put(word in address, byte in data) is
   if LARGE_ARRAY_1_SIZE > 1792 then
      if address >= 1792 then
         _large_array_1_byte_8h[address - 1792] = data
      elsif address >= 1536 then
         _large_array_1_byte_7h[address - 1536] = data
      elsif address >= 1280 then
         _large_array_1_byte_6h[address - 1280] = data
      elsif address >= 1024 then
         _large_array_1_byte_5h[address - 1024] = data
      elsif address >= 768 then
         _large_array_1_byte_4h[address - 768] = data
      elsif address >= 512 then
         _large_array_1_byte_3h[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2h[address - 256] = data
      else
         _large_array_1_byte_1h[address - 0] = data
      end if 
   elsif LARGE_ARRAY_1_SIZE > 1536 then
      if address >= 1536 then
         _large_array_1_byte_7g[address - 1536] = data
      elsif address >= 1280 then
         _large_array_1_byte_6g[address - 1280] = data
      elsif address >= 1024 then
         _large_array_1_byte_5g[address - 1024] = data
      elsif address >= 768 then
         _large_array_1_byte_4g[address - 768] = data
      elsif address >= 512 then
         _large_array_1_byte_3g[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2g[address - 256] = data
      else
         _large_array_1_byte_1g[address - 0] = data
      end if 
   elsif LARGE_ARRAY_1_SIZE > 1280 then
      if address >= 1280 then
         _large_array_1_byte_6f[address - 1280] = data
      elsif address >= 1024 then
         _large_array_1_byte_5f[address - 1024] = data
      elsif address >= 768 then
         _large_array_1_byte_4f[address - 768] = data
      elsif address >= 512 then
         _large_array_1_byte_3f[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2f[address - 256] = data
      else
         _large_array_1_byte_1f[address - 0] = data
      end if
   elsif LARGE_ARRAY_1_SIZE > 1024 then
      if address >= 1024 then
         _large_array_1_byte_5e[address - 1024] = data
      elsif address >= 768 then
         _large_array_1_byte_4e[address - 768] = data
      elsif address >= 512 then
         _large_array_1_byte_3e[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2e[address - 256] = data
      else
         _large_array_1_byte_1e[address - 0] = data
      end if
   elsif LARGE_ARRAY_1_SIZE > 768 then
      if address >= 768 then
         _large_array_1_byte_4d[address - 768] = data
      elsif address >= 512 then
         _large_array_1_byte_3d[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2d[address - 256] = data
      else
         _large_array_1_byte_1d[address - 0] = data
      end if
   elsif LARGE_ARRAY_1_SIZE > 512 then
      if address >= 512 then
         _large_array_1_byte_3c[address - 512] = data
      elsif address >= 256 then
         _large_array_1_byte_2c[address - 256] = data
      else
         _large_array_1_byte_1c[address - 0] = data
      end if
   elsif LARGE_ARRAY_1_SIZE > 256 then
      if address >= 256 then
         _large_array_1_byte_2b[address - 256] = data
      else
         _large_array_1_byte_1b[address - 0] = data
      end if
   elsif LARGE_ARRAY_1_SIZE > 0 then
      _large_array_1_byte_1a[address - 0] = data
   end if
end procedure


