-- ------------------------------------------------------
-- Title: lcd_one_dot_matix example for the jallib project
--
-- Author: Pavel Milanes Costa, Copyright (c) 2015, all rights reserved. pavelmc@gmail.com
--
-- Adapted-by:
--
-- Revision: 1
--
-- Compiler: >=2.4q3
--
-- This file is part of jallib  (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description:
-- Simple lcd_one_dot_matix example with the pic18f25k22 using an external crystal or resonator.
-- It has a led flashing on each cycle start.
-- --
-- This lib is not for the classic LCD display that has islands of dot matrix for each character
-- This is for the ones that has just one big dot matrix, in this case 160x32 dots.
-- underground the LCD use one of this compatible chips:
-- AX6120, AX6121, SBN1661, SBN0080, SED1520, SED1521 and SED1522
--
-- Sources:
--
-- Notes:
--  - Creation date/time: 1 Mar 2015 21:28 Havana time.
--  - This file is maintained by hand
--
-- ------------------------------------------------------
--
include 18f25k22                      -- target PICmicro
--
-- This program assumes that a 16 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
pragma target clock 16_000_000      -- oscillator frequency
--
pragma target OSC      HSH                       -- crystal or resonator
pragma target PLLEN    DISABLED                  -- PLL off
pragma target WDT      DISABLED                  -- watchdog
pragma target XINST    DISABLED                  -- extended instruction set
pragma target DEBUG    DISABLED                  -- debugging
pragma target BROWNOUT DISABLED                  -- brownout reset
pragma target FCMEN    DISABLED                  -- clock monitoring
pragma target IESO     DISABLED                  -- int/ext osc. switch
pragma target LVP      ENABLED                   -- low voltage programming
pragma target MCLR     EXTERNAL                  -- reset
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program. Other programs may need more or different settings.
--
OSCCON_SCS = 0                      -- select primary oscillator
OSCTUNE_PLLEN = FALSE               -- no PLL
--
enable_digital_io()                 -- make all pins digital I/O
--
include delay

-- LED IO definition
alias led				is pin_C2
alias led_direction		is pin_C2_direction
led_direction = output

alias lcd_dataport					is portB
alias lcd_dataport_direction		is portB_direction
lcd_dataport_direction				= output

alias lcd_a0				is pin_C7
pin_c7_direction			= output

alias lcd_e1				is pin_c0
alias lcd_e2				is pin_c1
alias lcd_e3				is pin_c5
pin_c0_direction		= output
pin_c1_direction		= output
pin_c5_direction		= output

-- temp vars
var byte tbyte = 0
var byte tbyte1 = 0
var byte tbyte2 = 0

-- include the lib in question
include lcd_one_dot_matrix
lcd_init()

-- print lib to render the data on the display
include print

const byte welcome[]  = " This is just a text line "
const byte welcome1[] = "Esta es una cadena de text"
const byte welcome2[] = "1234567890!@#$%^*()-=+/_<>"
const byte welcome3[] = "it has 4 rows and 26 chars"

forever loop
   -- parpadear
   for 4 loop
      led = ON
      delay_100ms(5)
      led = OFF
      delay_100ms(5)
   end loop
   --
   lcd_cursor_position(0,0)
   print_string(lcd,welcome)
   delay_100ms(5)
   --
   lcd_cursor_position(1,0)
   print_string(lcd,welcome1)
   delay_100ms(5)
   --
   lcd_cursor_position(2,0)
   print_string(lcd,welcome2)
   delay_100ms(5)
   --
   lcd_cursor_position(3,0)
   print_string(lcd,welcome3)
   delay_100ms(30)
   --
   lcd_clear_screen()
end loop
