-- Title: 24LC256 i2c eeprom example
-- Author: Matthew Schinkel, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4n
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: example read and write to 24lc256 i2c eeprom
--
-- Sources:
-- http://groups.google.com/group/jallib
--
-- This file has been generated by Matt's sample generator.
--

-- include chip
include 18f4525                   -- target picmicro
pragma target osc INTOSC_NOCLKOUT -- internal oscillator
pragma target clock 32_000_000    -- oscillator frequency
pragma target wdt  CONTROL
pragma target lvp  ENABLED 
pragma target MCLR EXTERNAL        -- reset externally
pragma target XINST DISABLED       -- not supported by JalV2
--
OSCCON_IRCF = 0b111  -- set internal osc to 8mhz
OSCTUNE_PLLEN = true -- enable PPL, multiply internal osc by 4
--
enable_digital_io()  -- make all pins digital I/O
_usec_delay(100_000) -- wait for power to settle





-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available


-- setup i2c software master
const word _i2c_bus_speed = 1 ; * 100kHz
const bit _i2c_level = true   ; i2c levels (not SMB)
-- I2C PINS
alias i2c_scl            is pin_scl
alias i2c_scl_direction  is pin_scl_direction
alias i2c_sda            is pin_sda
alias i2c_sda_direction  is pin_sda_direction
--
include i2c_software
i2c_initialize()


include eeprom_24lc256 -- include 24lc256 eeprom

-- start of main program

var byte data
forever loop
   ee_24lc256_write(0xA0, 1, "A")  -- write "A" to 24lc256
   
   ee_24lc256_read(0xA0, 1, data)  -- read from 24lc256
   
   serial_hw_write(data)            -- send the data via serial port 4 times
   serial_hw_write(data)            -- recieved data should be "AAAA"
   serial_hw_write(data)
   serial_hw_write(data)
   
   _usec_delay (500_000)            -- wait half a second then loop
end loop