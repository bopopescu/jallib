-- Title: SPI Slave Hardware Sample
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Compiler: 2.4q5
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Recieves data via SPI, outputs to serial port.
--
-- This file has been generated by hand (manually maintained)
--
-- Sources:
-- http://www.justanotherlanguage.org/content/jallib/tutorials/tutorial_spi_introduction
-- Jallib spi_master_hw library - Written by William Welch
-- http://ww1.microchip.com/downloads/en/devicedoc/spi.pdf
--
-- Notes:
-- The master should send slower then the slave can recieve, else data
-- will be lost. Try using SPI_RATE_FOSC_16 or SPI_RATE_FOSC_64 at master.
--
--    spi_init(SPI_MODE_11,SPI_RATE_FOSC_16)
--

-- include chip
include 18f4620                   -- target picmicro
pragma target osc INTOSC_NOCLKOUT              -- hs crystal or resonator
;pragma target osc hs              -- hs crystal or resonator
;pragma target clock 20_000_000    -- oscillator frequency
pragma target clock 32_000_000    -- oscillator frequency
--
pragma target wdt  CONTROL
pragma target lvp  enabled 
pragma target MCLR external        -- reset externally
--;
;OSCCON_IRCF = 0b110  -- set int osc to 4mhz
OSCCON_IRCF = 0b111   -- set internal osc to 8mhz
OSCTUNE_PLLEN = true  -- multiply internal osc by 4
;--
enable_digital_io()                -- make all pins digital I/O
--
_usec_delay(100_000) -- wait for power to settle

-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available

include print
print_string(serial_data,"SAMPLE STARTED")
print_crlf(serial_data)

include format

-- Setup SPI Slave Hardware
pin_sdi_direction = input    -- spi input
pin_sdo_direction = output   -- spi output
pin_sck_direction = input    -- spi clock
--
alias spi_slave_hw_chip_select is pin_ss    -- slave select / chip select pin.
alias spi_slave_hw_chip_select_direction is pin_ss_direction
spi_slave_hw_chip_select_direction = input
const SPI_SLAVE_HW_SS_ACTIVE_STATE = LOW -- chip select pin is active low
--
-- chip select must be pin_ss & active low if TRUE. See more notes in library.
const SPI_SLAVE_HW_SYNCHRONOUS = TRUE
--
const SPI_SLAVE_HW_ENABLE_INTERRUPT = TRUE -- recieve data via interrupt
--
if SPI_SLAVE_HW_ENABLE_INTERRUPT == TRUE then
   const SPI_SLAVE_HW_TX_QUEUE_SIZE = 254 -- tx queue
   const SPI_SLAVE_HW_RX_QUEUE_SIZE = 254 -- rx queue
end if
--
-- Enable/Disable Packets. Currently only works with interrupts enabled.
-- (SPI_SLAVE_HW_SS_ACTIVE_STATE = low) marks end of packet.
const SPI_SLAVE_ENABLE_ISR_PACKETS = FALSE
--
include spi_slave_hw
spi_slave_init(SPI_MODE_11)
--

-- MAIN PROGRAM
forever loop
   while spi_slave_hw_rx_queue_nr_used > 0 loop
      serial_data = spi_slave_hw
   end loop
end loop
