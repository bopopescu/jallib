-- Title: Digital potentiometer mcp4131 sample
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4o
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: This sample controls digital potentiometer mcp4131
--
-- Sources:
-- http://ww1.microchip.com/downloads/en/DeviceDoc/22060b.pdf
--
-- This file has been generated by Matt's sample generator.
--

include 18f452                      -- target PICmicro
--
-- This program assumes that a 20 MHz resonator or crystal
-- is connected to pins OSC1 and OSC2.
-- (unspecified configuration bits may cause a different frequency!)
pragma target clock 20_000_000      -- oscillator frequency
--
pragma target OSC      HS           -- crystal or resonator
pragma target WDT      CONTROL      -- watchdog
pragma target DEBUG    DISABLED     -- no debugging
pragma target LVP      ENABLED      -- allow Low Voltage Programming
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program, but other programs may need more or different settings.
--
WDTCON_SWDTEN = OFF                 -- disable WDT
--
enable_digital_io()                 -- make all pins digital I/O


-- setup SPI library
include spi_master_hw         -- includes the spi library
-- define spi inputs/outputs
pin_sdi_direction = input    -- spi input
pin_sdo_direction = output   -- spi output
pin_sck_direction = output   -- spi clock
--
spi_init(SPI_MODE_11,SPI_RATE_FOSC_4) -- init spi, choose mode and speed
alias spi_master is spi_master_hw
alias spi_master_exchange is spi_master_hw_exchange


-- setup digital potentiometer mcp4131
alias mcp4131_ss is pin_ss
alias mcp4131_ss_direction is pin_ss_direction
--
include digital_potentiometer_mcp4131
mcp4131_init()
--
alias pot_wiper is mcp4131_wiper
alias pot_increment is mcp4131_increment
alias pot_decrement is mcp4131_decrement

pot_wiper = 0 -- set wiper to zero
var byte step = 0

forever loop
   pot_wiper = step
   step = step + 1

;   for 255 loop
;      pot_increment()
;   end loop
;   for 255 loop
;      pot_decrement()
;   end loop
end loop